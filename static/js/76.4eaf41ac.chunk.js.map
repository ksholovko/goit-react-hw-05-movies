{"version":3,"file":"static/js/76.4eaf41ac.chunk.js","mappings":"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","sources":["API.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst options = {\n  \n    headers: {\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNWNhN2M4YTA1ZGZkNWQ4OTdlMzAwNjk5ODFjZGU2YiIsInN1YiI6IjY1NTRjZGFkZWE4NGM3MTA5MTBiOGZiNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gVABBeA6GQNEjkvFd3o6J1Cmc4yYrMy1T5k_gQCBZgg'\n  }\n};\n\nexport async function getTrendingMovies() {\n    \n\n    const result = await axios.get('https://api.themoviedb.org/3/trending/movie/day?language=en-US', options);\n    \n    return result;\n}\n\nexport async function getMoviesBySearch(query) {\n\n  const result = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options);\n    \n    return result;\n \n};\n\nexport async function getMovieInfo(id) {\n\n  const result = await axios.get(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options);\n    \n  return result;\n} \n\nexport async function getMovieCast(id) {\n\n  const result = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`, options);\n    \n  return result;\n} \n\n\nexport async function getMovieReviews(id) {\n\n  const result = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`, options);\n    \n  return result;\n} \n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"ImageGallery\":\"Cast_ImageGallery__hRTKo\",\"ImageGalleryItem\":\"Cast_ImageGalleryItem__-2wTe\",\"ImageGalleryItemImage\":\"Cast_ImageGalleryItemImage__BCH0t\",\"ActorInfo\":\"Cast_ActorInfo__hn1gA\",\"Title\":\"Cast_Title__Pry6c\",\"noInfo\":\"Cast_noInfo__9ds9K\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getMovieCast } from \"API\";\nimport noimage from 'images/noimage.png';\nimport css from \"./Cast.module.css\"\n\nconst Cast = () => {\n\n   const {movieId} = useParams();\n\n   const [actors, setActors] = useState([]);\n\n   useEffect(() => {\n        \n      const getMovieActors = async () => {\n    \n            try {\n               \n               const result = await getMovieCast(movieId);\n               setActors(result.data.cast);\n\n            } catch (error) {\n\n                console.log(error);\n\n            } \n        }\n        \n        getMovieActors();\n\n    \n    }, [movieId])\n\n   return (<div>\n      {actors.length !== 0 ? (\n         <ul className={css.ImageGallery}>\n           {actors.map(({ id, name, character, profile_path }) => {\n               return (\n                        <li key={id} className={css.ImageGalleryItem}>\n                       <div>{profile_path === null\n                            ? <img src={noimage} alt=\"noimage\" className={css.ImageGalleryItemImage}></img>\n                            : <img src={`https://image.tmdb.org/t/p/w500/${profile_path}`} alt={name} className={css.ImageGalleryItemImage}></img>}</div> \n                       <div className={css.ActorInfo}>\n                       <h3 className={css.Title}>{name}</h3>\n                           <p>{character}</p>\n                       </div> \n                    </li> \n                )\n            })}\n         </ul>\n      ) : (\n            <p className={css.noInfo}>Sorry, no information</p>\n      )\n      \n   }\n        </div>\n    )\n   \n}\n\nexport default Cast;"],"names":["options","headers","Authorization","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","axios","sent","abrupt","stop","getMoviesBySearch","_x","_getMoviesBySearch","_callee2","query","_context2","concat","getMovieInfo","_x2","_getMovieInfo","_callee3","id","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","useEffect","getMovieActors","_ref","data","cast","t0","console","log","_jsx","children","length","className","css","map","_ref2","name","character","profile_path","_jsxs","src","noimage","alt"],"sourceRoot":""}